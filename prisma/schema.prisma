// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  safeMode  Boolean  @default(false)
  createdAt DateTime @default(now())
  routines  Routine[]
  alarms    Alarm[]
  goals     Goal[]
  blockedApps BlockedApp[]
}

model Routine {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  title     String
  startTime DateTime
  endTime   DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Alarm {
  id        Int           @id @default(autoincrement())
  user      User          @relation(fields: [userId], references: [id])
  userId    Int
  time      DateTime
  active    Boolean       @default(true)
  repeat    AlarmRepeat   @default(once)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  selfies   Selfie[]
}

model Selfie {
  id        Int      @id @default(autoincrement())
  alarm     Alarm    @relation(fields: [alarmId], references: [id])
  alarmId   Int
  imagePath String
  brightness Float
  approved  Boolean  @default(false)
  createdAt DateTime @default(now())
}

enum AlarmRepeat {
  once
  daily
  weekly
}

model Goal {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  title     String
  completed Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BlockedApp {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  appName   String
  type      BlockType
  duration  Int?     // Duration in minutes for temporary blocks
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum BlockType {
  temporary
  permanent
}
